# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: podfics

provider:
  name: aws
  runtime: nodejs8.10
  profile: podfic-serverless-admin
  stage: dev
  environment:
    PODFIC_TABLE: podfics-${opt:stage, self:provider.stage}
    READER_TABLE: readers-${opt:stage, self:provider.stage}
    TAGS_TABLE: tags-${opt:stage, self:provider.stage}
    WRITER_TABLE: writers-${opt:stage, self:provider.stage}
    S3_BUCKET_IMAGES: podfic-images-${opt:stage, self:provider.stage}
    S3_BUCKET_PODFICS: podfics-${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:ListBucket"
      Resource: "arn:aws:s3:::podfics-dev"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PODFIC_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.READER_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TAGS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.WRITER_TABLE}"

functions:
  getAllPodfics:
    handler: podfics.getAll
    events:
      - http:
          path: api/podfics/getAll
          method: get
          cors: true
  getOnePodfic:
    handler: podfics.getOne
    events:
      - http:
          path: api/podfics/getOne/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  getTag:
    handler: tags.getOne
    events:
      - http:
          path: api/tags/getOne/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true